{% comment %} Occasions Manager — BLOCK (main display with grid) {% endcomment %}
<div class="occasions-manager"
     id="occasions-manager-{{ block.id }}"
     data-api-url="{{ block.settings.api_url | escape }}"
     data-block="occasions-manager">

  {%- comment -%} Pass Liquid data to JS safely via JSON {%- endcomment -%}
  <script type="application/json" data-occasions-config>
    {
      "customerId": {% if customer %}"gid://shopify/Customer/{{ customer.id }}"{% else %}null{% endif %},
      "customerName": {% if customer %}"{{ customer.first_name }} {{ customer.last_name }}"{% else %}null{% endif %},
      "blockId": "{{ block.id }}",
      "buttonLabel": "{{ block.settings.button_label | escape }}",
      "loginUrl": "{{ routes.storefront_login_url }}",
      "defaultGiftUrl": "{{ block.settings.default_gift_url | escape }}",
      "pressiePointsField": "{{ block.settings.pressie_points_field | escape }}"
    }
  </script>

  {% if customer %}
    <!-- Include form snippets instead of inline modals -->
    {% render 'add-occasion-form', block: block, customer: customer %}
    {% render 'edit-occasion-form', block: block, customer: customer %}

    <!-- Display section -->
    <div class="display-section">
      <div class="occasions-card">
        <h3 class="h5">{{ block.settings.display_heading }}</h3>

        <!-- Customer greeting message -->
        <div class="customer-greeting-summary">
          <p class="customer-info">
            {% assign no_occasions = customer.metafields.custom.no_occasions.value | default: 0 %}
            {% assign actual_occasions_count = customer.metafields.custom.my_occasions.value.size | default: 0 %}
            {% assign target_occasions = block.settings.pressie_points_target | default: 3 %}
            {% assign points_value = block.settings.pressie_points_value | default: 5 %}
            
            {% if no_occasions == 0 and actual_occasions_count > 0 %}
              {% assign no_occasions = actual_occasions_count %}
            {% endif %}
            
            {% if no_occasions == 0 %}
              Hi {{ customer.first_name }}, add {{ target_occasions }} occasion reminders and earn {{ points_value }} Pressie Points.
            {% elsif no_occasions < target_occasions %}
              Hi {{ customer.first_name }}, add {{ target_occasions | minus: no_occasions }} more occasion reminders and earn {{ points_value }} Pressie Points.
            {% else %}
              Hi {{ customer.first_name }} congratulations, you have {{ no_occasions }} occasion reminders set. Please update or add more reminders below to keep your preferences up to date.
            {% endif %}
          </p>
        </div>

        <div class="occasions-grid">
          <!-- Add button -->
          <div class="add-occasion-item">
            <button class="button" onclick="openModal{{ block.id }}('Add Occasion Reminder')">
              <span style="display: flex; align-items: center; gap: 8px; white-space: nowrap;">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                </svg>
                <span>Add</span>
              </span>
            </button>
          </div>

          <!-- Occasions loop -->
          {% for occasion in customer.metafields.custom.my_occasions.value %}
            {% comment %} DEBUG: Output occasion data to console {% endcomment %}
            <script>
              console.log("[v0] Metaobject occasion data:", {
                id: "{{ occasion.system.id | default: occasion.id | default: occasion.gid | default: occasion.handle | default: 'no-id' }}",
                date: "{{ occasion.date | date: '%Y-%m-%d' }}",
                type: "{{ occasion.type }}",
                occasion_name: "{{ occasion.occasion_name }}",
                other_occasion: "{{ occasion.other_occasion }}",
                raw_occasion: {{ occasion | json }}
              });
            </script>
            
            {% assign day_number = occasion.date | date: "%-d" %}
            {% assign month_name = occasion.date | date: "%B" %}
            
            {% if day_number == '1' or day_number == '21' or day_number == '31' %}
              {% assign day_suffix = 'st' %}
            {% elsif day_number == '2' or day_number == '22' %}
              {% assign day_suffix = 'nd' %}
            {% elsif day_number == '3' or day_number == '23' %}
              {% assign day_suffix = 'rd' %}
            {% else %}
              {% assign day_suffix = 'th' %}
            {% endif %}
            
            {% assign formatted_date = day_number | append: day_suffix | append: ' ' | append: month_name %}

            {% assign gift_url = block.settings.default_gift_url %}
            {%- case occasion.type -%}
              {%- when block.settings.occasion_type_1 -%}
                {%- unless block.settings.gift_url_1 == blank -%}{%- assign gift_url = block.settings.gift_url_1 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_2 -%}
                {%- unless block.settings.gift_url_2 == blank -%}{%- assign gift_url = block.settings.gift_url_2 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_3 -%}
                {%- unless block.settings.gift_url_3 == blank -%}{%- assign gift_url = block.settings.gift_url_3 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_4 -%}
                {%- unless block.settings.gift_url_4 == blank -%}{%- assign gift_url = block.settings.gift_url_4 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_5 -%}
                {%- unless block.settings.gift_url_5 == blank -%}{%- assign gift_url = block.settings.gift_url_5 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_6 -%}
                {%- unless block.settings.gift_url_6 == blank -%}{%- assign gift_url = block.settings.gift_url_6 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_7 -%}
                {%- unless block.settings.gift_url_7 == blank -%}{%- assign gift_url = block.settings.gift_url_7 -%}{%- endunless -%}
              {%- when block.settings.occasion_type_8 -%}
                {%- unless block.settings.gift_url_8 == blank -%}{%- assign gift_url = block.settings.gift_url_8 -%}{%- endunless -%}
            {%- endcase -%}
            {% if gift_url == blank %}
              {% assign gift_url = block.settings.default_gift_url %}
            {% endif %}

            <div class="occasion-item" 
                 data-occasion-id="{{ occasion.system.id | default: occasion.id | default: occasion.gid | default: occasion.handle | default: 'no-id' }}"
                 data-occasion-date="{{ occasion.date | date: '%Y-%m-%d' }}"
                 data-type="{{ occasion.type }}"
                 data-occasion-name="{{ occasion.occasion_name }}"
                 data-other-occasion="{{ occasion.other_occasion }}">
              <div class="occasion-header">
                <div>
                  <h4 class="occasion-name">{{ occasion.occasion_name }}</h4>
                  <p class="occasion-date">{{ formatted_date }}</p>
                  {% if occasion.type != blank %}
                    <p class="occasion-type-debug" style="font-size: 12px; color: #666;">Type: {{ occasion.type }}</p>
                  {% else %}
                    <p class="occasion-type-debug" style="font-size: 12px; color: red;">Type: EMPTY/NULL</p>
                  {% endif %}
                </div>
                <button type="button" class="edit-btn"
                        data-occasion-id="{{ occasion.system.id | default: occasion.id | default: occasion.gid | default: occasion.handle | default: 'no-id' }}"
                        data-occasion-date="{{ occasion.date | date: '%Y-%m-%d' }}"
                        data-type="{{ occasion.type }}"
                        data-occasion-name="{{ occasion.occasion_name }}"
                        data-other-occasion="{{ occasion.other_occasion }}">⋯</button>
              </div>
              {% assign button_text = "Find a Gift" %}
              {% if occasion.type == block.settings.occasion_type_1 or occasion.type == block.settings.occasion_type_2 or occasion.type == block.settings.occasion_type_3 or occasion.type == block.settings.occasion_type_4 or occasion.type == block.settings.occasion_type_5 or occasion.type == block.settings.occasion_type_6 or occasion.type == block.settings.occasion_type_7 or occasion.type == block.settings.occasion_type_8 %}
                {% assign button_text = "Find a Gift for " | append: occasion.type %}
              {% endif %}
              <a href="{{ gift_url | escape }}" class="gift-link">{{ button_text }}</a>
            </div>
          {% endfor %}
          {% if customer.metafields.custom.my_occasions.value.size == 0 %}
            <div class="occasions-message info" style="grid-column:1 / -1;">
              <p>No occasions found.</p>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  {% else %}
    <!-- Updated login link to use storefront_login_url without return parameter -->
    <div class="login-required">
      <p class="login-message">Please log in to manage your occasions</p>
      <a href="{{ routes.storefront_login_url }}" class="login-button">Log in to your account</a>
    </div>
  {% endif %}
</div>

{% stylesheet %}
/* Simplified CSS - removed modal-specific styles, kept grid and display styles */
.occasions-manager{
  max-width:1200px;
  margin:0 auto;
  padding:0 !important;
  margin-left:0 !important;
  width:100%;
  box-sizing:border-box;
}

.occasions-manager .customer-greeting-summary{ 
  margin:0 0 10px 0; 
  padding:0; 
  text-align:left; 
}
.occasions-manager .customer-greeting-summary .customer-info{
  margin:0; 
  padding:0; 
  font-size:1rem; 
  color:var(--color-foreground);
  font-weight:var(--font-weight-medium, 500);
}

.occasions-manager .occasions-grid{
  display:grid; 
  grid-template-columns:repeat(4, 1fr); 
  gap:24px; 
  align-items:start; 
  margin:0; 
  padding:0;
}

.occasions-manager .occasion-item{
  background:var(--color-background);
  border:1px solid var(--color-border);
  border-radius:var(--border-radius);
  padding:16px; 
  min-width:288px; 
  transition:all .2s ease;
  display:flex; 
  flex-direction:column; 
  gap:12px; 
  min-height:160px;
}
.occasions-manager .occasion-item:hover{
  border-color:var(--color-primary-button-background);
  transform:translateY(-2px);
  box-shadow:0 8px 25px rgba(0,0,0,.1);
}
.occasions-manager .occasion-item .occasion-header{ 
  display:flex; 
  justify-content:space-between; 
  align-items:flex-start; 
  margin-bottom:12px; 
}
.occasions-manager .occasion-item .occasion-name{ 
  font-weight:var(--font-weight-bold, 600); 
  font-size:18px; 
  margin:0; 
  color:var(--color-foreground); 
}
.occasions-manager .occasion-item .occasion-date{ 
  color:var(--color-foreground-secondary, #666); 
  font-size:15px; 
  margin:4px 0 16px 0; 
}
.occasions-manager .occasion-item .edit-btn{
  background:none; 
  border:1px solid var(--color-border); 
  border-radius:var(--style-border-radius-button, 4px);
  padding:6px 10px; 
  cursor:pointer; 
  font-size:14px; 
  color:var(--color-foreground-secondary, #666); 
  transition:all .2s ease;
}
.occasions-manager .occasion-item .edit-btn:hover{ 
  background:var(--color-background-secondary, #f5f5f5); 
  border-color:var(--color-primary-button-background); 
}

.occasions-manager .add-occasion-item{
  background:var(--color-background); 
  border:1px solid var(--color-border); 
  border-radius:var(--border-radius);
  padding:16px; 
  min-width:288px; 
  transition:all .2s ease;
  display:flex; 
  align-items:center; 
  justify-content:center; 
  min-height:160px;
}
.occasions-manager .add-occasion-item:hover{ 
  border-color:var(--color-primary-button-background); 
  transform:translateY(-2px); 
  box-shadow:0 8px 25px rgba(0,0,0,.1); 
}

.occasions-manager .button{
  font-family:var(--button-font-family-primary);
  font-weight:var(--button-font-weight-primary);
  text-transform:var(--button-text-case-primary);
  border-radius:var(--style-border-radius-buttons-primary, 8px);
  display:inline-flex; 
  align-items:center; 
  justify-content:center; 
  gap:8px;
  text-decoration:none; 
  text-align:center;
  color:var(--color-primary-button-text);
  background-color:var(--color-primary-button-background);
  border:var(--style-border-width-primary, 2px) solid var(--color-primary-button-border);
  padding:12px 20px; 
  cursor:pointer; 
  transition:all .25s ease;
  min-height:48px; 
  white-space:nowrap; 
  font-size:1rem; 
  line-height:1.2; 
  flex-shrink:0; 
  min-width:100px; 
  box-sizing:border-box;
}

.occasions-manager .gift-link{ 
  color:var(--color-link); 
  text-decoration:underline; 
  font-size:.9rem; 
  transition:color .2s ease; 
  display:inline-block; 
  margin-top:8px; 
}
.occasions-manager .gift-link:hover{ 
  color:var(--color-link-hover); 
  text-decoration:none; 
}

.occasions-manager .occasions-message{
  margin-top:20px; 
  padding:16px 20px; 
  border-radius:var(--style-border-radius-card, 8px);
  text-align:center; 
  font-size:.95rem;
}

.occasions-manager .display-section,
.occasions-manager .occasions-card{ 
  margin:0 !important; 
  padding:0 !important; 
  margin-left:0 !important; 
  padding-left:0 !important; 
}
.occasions-manager .occasions-card h3{ 
  margin-left:0 !important; 
  padding-left:0 !important; 
}

.shopify-block.section:has(> [data-block="occasions-manager"]){
  --padding-inline:0 !important;
  grid-template-columns:0 minmax(0, 1fr) 0 !important;
}

/* Added styling for logged out state */
.occasions-manager .login-required {
  text-align: center !important;
  padding: 40px 20px !important;
  max-width: 400px !important;
  margin: 0 auto !important;
}

.occasions-manager .login-required .login-message {
  margin: 0 0 24px 0 !important;
  font-size: 1.1rem !important;
  color: var(--color-foreground) !important;
  font-weight: var(--font-weight-medium, 500) !important;
}

.occasions-manager .login-required .login-button {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  padding: var(--button-padding-block) var(--button-padding-inline) !important;
  border-radius: var(--style-border-radius-buttons-primary) !important;
  font-size: var(--button-font-size) !important;
  font-family: var(--button-font-family-primary) !important;
  font-weight: var(--button-font-weight-primary) !important;
  text-decoration: none !important;
  cursor: pointer !important;
  border: var(--button-border-width) solid transparent !important;
  transition: all 0.2s ease !important;
  background-color: var(--color-primary-button-background) !important;
  color: var(--color-primary-button-text) !important;
  border-color: var(--color-primary-button-border) !important;
  min-height: 48px !important;
  min-width: 160px !important;
}

.occasions-manager .login-required .login-button:hover {
  background-color: var(--color-primary-button-hover-background) !important;
  color: var(--color-primary-button-hover-text) !important;
  border-color: var(--color-primary-button-hover-border) !important;
  transform: translateY(-1px) !important;
}
{% endstylesheet %}

<script>
document.addEventListener('DOMContentLoaded', () => {
  
  document.querySelectorAll('[data-block="occasions-manager"]').forEach((root) => {
    const configScript = root.querySelector('[data-occasions-config]');
    const config = configScript ? JSON.parse(configScript.textContent) : {};
    const blockId = config.blockId;

    if (!config.customerId) return;

    function sortOccasionsByNextAnniversary() {
      const occasionsGrid = root.querySelector('.occasions-grid');
      if (!occasionsGrid) return;

      const addButton = occasionsGrid.querySelector('.add-occasion-item');
      const occasionItems = Array.from(occasionsGrid.querySelectorAll('.occasion-item'));
      
      if (occasionItems.length === 0) return;

      // Calculate days until next anniversary for each occasion
      const today = new Date();
      const currentYear = today.getFullYear();
      
      occasionItems.forEach(item => {
        const dateStr = item.dataset.occasionDate; // Format: YYYY-MM-DD
        if (!dateStr) return;
        
        const [year, month, day] = dateStr.split('-').map(Number);
        
        // Create anniversary date for this year
        let anniversaryThisYear = new Date(currentYear, month - 1, day);
        
        // If anniversary has passed this year, use next year
        if (anniversaryThisYear < today) {
          anniversaryThisYear = new Date(currentYear + 1, month - 1, day);
        }
        
        // Calculate days until anniversary
        const daysUntil = Math.ceil((anniversaryThisYear - today) / (1000 * 60 * 60 * 24));
        item.dataset.daysUntilAnniversary = daysUntil;
      });

      // Sort by days until anniversary
      occasionItems.sort((a, b) => {
        const daysA = parseInt(a.dataset.daysUntilAnniversary) || 999999;
        const daysB = parseInt(b.dataset.daysUntilAnniversary) || 999999;
        return daysA - daysB;
      });

      // Re-append elements in sorted order (add button first, then sorted occasions)
      if (addButton) {
        occasionsGrid.appendChild(addButton);
      }
      occasionItems.forEach(item => {
        occasionsGrid.appendChild(item);
      });
    }

    // Global modal functions for snippets to use
    window[`openModal${blockId}`] = function(title = config.buttonLabel || 'Add Occasion') {
      if (title === 'Add Occasion Reminder') {
        const addModalOverlay = document.querySelector(`#modal-overlay-${blockId}`);
        const addModalTitle = document.querySelector(`#modal-overlay-${blockId} .modal-title`);
        
        if (addModalOverlay && addModalTitle) {
          addModalTitle.textContent = title;
          addModalOverlay.style.display = 'flex';
          document.body.style.overflow = 'hidden';
          
          // Trigger form reset for add mode
          if (window[`resetFormToAdd${blockId}`]) {
            window[`resetFormToAdd${blockId}`]();
          }
        }
      }
    };

    window[`closeModal${blockId}`] = function() {
      const addModalOverlay = document.querySelector(`#modal-overlay-${blockId}`);
      const editModalOverlay = document.querySelector(`#edit-modal-overlay-${blockId}`);
      
      if (addModalOverlay) {
        addModalOverlay.style.display = 'none';
      }
      if (editModalOverlay) {
        editModalOverlay.style.display = 'none';
      }
      document.body.style.overflow = '';
    };

    // Attach edit handlers to occasion cards
    function attachEditHandlers() {
      root.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.preventDefault();
          const occasionData = {
            id: btn.dataset.occasionId,
            date: btn.dataset.occasionDate,
            type: btn.dataset.type,
            occasion_name: btn.dataset.occasionName
          };
          
          if (window[`populateFormForEdit${blockId}`]) {
            window[`populateFormForEdit${blockId}`](occasionData);
          }
        });
      });
    }

    sortOccasionsByNextAnniversary();
    attachEditHandlers();
  });
});
</script>

{% javascript %}
{% endjavascript %}

{% schema %}
{
  "name": "Occasions Manager",
  "tag": "section",
  "class": "section",
  "settings": [
    { "type": "text", "id": "api_url", "label": "API URL", "default": "/api/create-metaobject" },
    { "type": "text", "id": "button_label", "label": "Button Label", "default": "Add" },
    { "type": "text", "id": "display_heading", "label": "Display Heading", "default": "My Occasions" },
    { "type":"header","content":"Pressie Points Configuration" },
    { "type":"number","id":"pressie_points_target","label":"Occasions Required for Points","default":3,"info":"Number of occasions needed to earn Pressie Points" },
    { "type":"number","id":"pressie_points_value","label":"Points Value","default":5,"info":"Number of Pressie Points awarded when target is reached" },
    { "type":"text","id":"pressie_points_field","label":"Pressie Points Metafield Reference","default":"app--152217321473--loyalty_program.points","info":"Metafield reference for customer loyalty points (e.g., app--152217321473--loyalty_program.points)" },
    { "type":"header","content":"Gift URLs by Occasion Type" },
    { "type":"text","id":"occasion_type_1","label":"Occasion Type 1","default":"Dad's Birthday","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_1","label":"Gift URL 1","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_2","label":"Occasion Type 2","default":"Mum's Birthday","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_2","label":"Gift URL 2","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_3","label":"Occasion Type 3","default":"Family Birthday","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_3","label":"Gift URL 3","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_4","label":"Occasion Type 4","default":"Friend's Birthday","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_4","label":"Gift URL 4","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_5","label":"Occasion Type 5","default":"Anniversary","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_5","label":"Gift URL 5","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_6","label":"Occasion Type 6","default":"Mother's Day","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_6","label":"Gift URL 6","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_7","label":"Occasion Type 7","default":"Father's Day","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_7","label":"Gift URL 7","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"text","id":"occasion_type_8","label":"Occasion Type 8","default":"Anniversary","info":"Will be populated dynamically from metafield definition" },
    { "type":"url","id":"gift_url_8","label":"Gift URL 8","info":"Enter relative path like /collections/gifts or full URL" },
    { "type":"header","content":"Default Gift URL" },
    { "type":"text","id":"default_gift_url","label":"Default Gift URL","info":"Used when no specific URL is set for an occasion type","default":"/collections/biscuits" }
  ]
}
{% endschema %}
